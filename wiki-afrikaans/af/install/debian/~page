# Debian

@{index}

[[ info
The following instructions to install Gambas on Debian are also applicable for Linux Mint Debian (LMDE) and other Debian (non Ubuntu) based distributions.
]]

----

## [<font color="darkblue">Gambas 3 binaries</font>]

### [<font color="blue">For wheezy (oldstable)</font>]

----

#### [<font color="green">Gambas 3.1.1</font>]

----

Official repository for wheezy has Gambas 3.1.1 available.

All it takes is opening a terminal and enter these commands:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

----

### [<font color="blue">For jessie (stable)</font>]

----

#### [<font color="green">Gambas 3.5.4</font>]

----

Official repository for jessie has Gambas 3.5.4 available.

Open a terminal and enter these commands:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

----

### [<font color="blue">For stretch (testing)</font>]

----

#### [<font color="green">Gambas 3.8.4</font>]

----

Official repository for stretch has Gambas 3.8.4 available.

Open a terminal and enter these commands:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

----

### [<font color="blue">For sid (unstable)</font>]

----

#### [<font color="green">Gambas 3.8.4</font>]

----

Official repository for sid has Gambas 3.8.4 available.

Open a terminal and enter these commands:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

----

## [<font color="darkblue">Gambas3 compilation</font>]

----

[[ info
Installing binaries with a package management system is ALWAYS preferred over compilation and installation.
]]

----

### [<font color="blue">Compilation from sources (wheezy - oldstable)</font>]

----

#### [<font color="green">Gambas 3 (version <= 3.4.2)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> When installing first update the sources:

    $ sudo apt-get update

<i>Step 4.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libfbclient2 libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libldap2-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev libbonobo2-dev libcos4-dev libomniorb4-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libpoppler-private-dev libasound2-dev libesd0-dev libdirectfb-dev libaa1-dev libxtst-dev libffi-dev kdelibs5-dev firebird-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgsl0-dev libncurses5-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libcairo2-dev libgmime-2.6-dev llvm-3.1-dev

<i>Step 5.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.5 and <= 3.6)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> When installing first update the sources:

    $ sudo apt-get update

<i>Step 4.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-3.5-dev libalure-dev libgmp-dev libgtk-3-dev

[[ warning
**NOTE**

When running above line those packages missing in Debian wheezy will be mentioned. For the availability of these packages see [A note on package dependencies](#t21)<br/>
For example your missing packages are in the jessie repository. Open sources.list with nano editor.

    $ sudo nano -w /etc/apt/sources.list

Add these lines to sources.list :

    deb http://ftp.nl.debian.org/debian/ jessie main
    deb-src http://ftp.nl.debian.org/debian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

Next update the sources and install the missing packages (or better use apt preferences):

    $ sudo apt-get update
    $ sudo apt-get install <name-of-missing-package-01> <name-of-missing-package-02> ...

<font color="red">Doing sudo apt-get update and upgrade later on, will pull in a lot more and might mess up your system install.<br/>
So <b>directly after the installation of the missing packages it is strongly advised to remove the jessie entry from sources.list</b>.</font><br/>
For this do:

    $ sudo nano -w /etc/apt/sources.list

Add # to these lines in the sources.list to comment them out:

    #deb http://ftp.nl.debian.org/debian/ jessie main
    #deb-src http://ftp.nl.debian.org/debian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

<font color="green">If you do want to keep both wheezy and jessie in the sources.list and not mess up your system, the have a look at 
<a href="https://wiki.debian.org/AptPreferences"target="_blank">Apt Preferences</a>, as it explains how to grab packages from a later release but leave the rest as-is.</font>

]]

<i>Step 5.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.7 and development version on `/trunk`)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> When installing first update the sources:

    $ sudo apt-get update

<i>Step 4.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-3.5-dev libalure-dev libgmp-dev libgtk-3-dev libsdl2-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-image-dev sane-utils libdumb1-dev

For version on `/trunk` and 3.8 or higher add:

    $ sudo apt-get install libqt5opengl5-dev libqt5svg5-dev libqt5webkit5-dev libqt5x11extras5-dev qtbase5-dev

<i><b>Note:</b> For trunk version you might need to install more dependencies as new components get developed.<br/>
For availability of packages in your specific distribution version see [A note on package dependencies](#t21)</i>

[[ warning
**NOTE**

When running above line those packages missing in Debian wheezy will be mentioned. For the availability of these packages see [A note on package dependencies](#t21)<br/>
For example your missing packages are in the jessie repository. Open sources.list with nano editor.

    $ sudo nano -w /etc/apt/sources.list

Add these lines to sources.list :

    deb http://ftp.nl.debian.org/debian/ jessie main
    deb-src http://ftp.nl.debian.org/debian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

Next update the sources and install the missing packages (or better use apt preferences):

    $ sudo apt-get update
    $ sudo apt-get install <name-of-missing-package-01> <name-of-missing-package-02> ...

<font color="red">Doing sudo apt-get update and upgrade later on, will pull in a lot more and might mess up your system install.<br/>
So <b>directly after the installation of the missing packages it is strongly advised to remove the jessie entry from sources.list</b>.</font><br/>
For this do:

    $ sudo nano -w /etc/apt/sources.list

Add # to these lines in the sources.list to comment them out:

    #deb http://ftp.nl.debian.org/debian/ jessie main
    #deb-src http://ftp.nl.debian.org/debian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

<font color="green">If you do want to keep both wheezy and jessie in the sources.list and not mess up your system, the have a look at 
<a href="https://wiki.debian.org/AptPreferences"target="_blank">Apt Preferences</a>, as it explains how to grab packages from a later release but leave the rest as-is.</font>

]]

<i>Step 5.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

### [<font color="blue">Compilation from sources (jessie - stable)</font>]

----

#### [<font color="green">Gambas 3 (version <= 3.4.2)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libfbclient2 libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libldap2-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev libbonobo2-dev libcos4-dev libomniorb4-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libpoppler-private-dev libasound2-dev libesd0-dev libdirectfb-dev libaa1-dev libxtst-dev libffi-dev kdelibs5-dev firebird-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgsl0-dev libncurses5-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgmime-2.6-dev llvm-dev

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 5.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 6.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.5 and <= 3.6)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-dev libalure-dev libgmp-dev libgtk-3-dev

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 5.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 6.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.7 and development version on `/trunk`)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-dev libalure-dev libgmp-dev libgtk-3-dev libsdl2-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-image-dev sane-utils libdumb1-dev

For version on `/trunk` and 3.8 or higher add:

    $ sudo apt-get install libqt5opengl5-dev libqt5svg5-dev libqt5webkit5-dev libqt5x11extras5-dev qtbase5-dev

<i><b>Note:</b> For trunk version you might need to install more dependencies when new components get developed.<br/>
For availability of packages in your specific distribution version see [A note on package dependencies](#t21)</i>

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 5.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 6.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>


----

### [<font color="blue">Compilation from sources (stretch and sid)</font>]

----

#### [<font color="green">Gambas 3 (version <= 3.4.2)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libfbclient2 libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libldap2-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev libbonobo2-dev libcos4-dev libomniorb4-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libpoppler-private-dev libasound2-dev libesd0-dev libdirectfb-dev libaa1-dev libxtst-dev libffi-dev kdelibs5-dev firebird-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgsl0-dev libncurses5-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgmime-2.6-dev llvm-dev

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 5.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 6.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.5 and <= 3.6)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-dev libalure-dev libgmp-dev libgtk-3-dev

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 5.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 6.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.7 and development version on `/trunk`)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t18) and [Downloading Gambas from Subversion repository](#t19)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-dev libalure-dev libgmp-dev libgtk-3-dev libsdl2-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-image-dev sane-utils libdumb1-dev

For version on `/trunk` and 3.8 or higher add:

    $ sudo apt-get install libqt5opengl5-dev libqt5svg5-dev libqt5webkit5-dev libqt5x11extras5-dev qtbase5-dev

<i><b>Note:</b> For trunk version you might need to install more dependencies when new components get developed.<br/>
For more recent versions of Debian you might need higher versions of dependencies than mentioned above.<br />
For availability of packages in your specific distribution version see [A note on package dependencies](#t21)</i>

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 5.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 6.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

## [<font color="darkblue">Important notes</font>]

### [<font color="blue">A note on installing from svn</font>]

----

If you want to compile the latest '/trunk' development version or a stable version from svn, you need to install subversion first.

To do this open a terminal and do:

    $ sudo apt-get install subversion

You will now be able to do a svn checkout.

----

### [<font color="blue">Downloading Gambas from Subversion repository</font>]

----

Everybody can make a copy of the repository on his hard disk by using the following command:

<b>For trunk version</b>

    $ svn checkout svn://svn.code.sf.net/p/gambas/code/gambas/trunk

<b>For current stable version (3.8)</b>

    $ svn checkout svn://svn.code.sf.net/p/gambas/code/gambas/branches/3.8

<b>For an old stable version (e.g. 3.6)</b>

    $ svn checkout svn://svn.code.sf.net/p/gambas/code/gambas/branches/3.6

----

### [<font color="blue">Trouble with sudo</font>]

----

When you issue your first sudo command in terminal it might give you trouble on Debian (see illustration below).

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/Debain-no-sudo.png">

This simply means you have insufficient user privileges. To deal with this problem add your user to the group sudo.

These are the steps to correct this problem:

<i>1.</i> Open a terminal and type:

    $ su root

Enter the root password and hit \<enter\>.

<i>2.</i> Type:

    $ adduser USERNAME sudo

Replace USERNAME with your account name.

<i>3.</i> Type (yes do it twice):

    $ exit
    $ exit

<i>4.</i> Reboot Debian and when started again sudo will work in a terminal for the user you added to sudo group.

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/Debian-add-sudo.png">

----

### [<font color="blue">A note on package dependencies</font>]

----

As dependencies may change over time it is always a good thing to know what is available on Debian and in what repository.

Check <a href="http://www.debian.org/distrib/packages"target="_blank">Debian packages overview</a> for the availability of needed dependency packages on Debian.

If you scroll all the way down on the page you can search for a package and find out what repositories hold them.

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/DebianPack.png"><br/>
<i>Search for package llvm-3.2-dev shows us it is only available for jessie and sid</i>

----

## [<font color="darkblue">Screenshots</font>]

### [<font color="blue">Debian wheezy</font>]

----

#### [<font color="green">Debian wheezy LXDE running Gambas 3.5.4, using jessie repository</font>]

----

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/Gambas-Debian-wheezy-using-jessie-3.5.4.png">
<br/>

----

#### [<font color="green">Debian wheezy running Gambas 3.5.2, using jessie repository</font>]

----

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/Gambas-Debian-wheezy-using-jessie.png">
<br/>

----

#### [<font color="green">Debian wheezy running Gambas 3.4.2 compiled from source</font>]

----

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/Gambas-Debian-wheezy-compiled.png">
<br/><br/>
'Debian Gambas 3 instructons by: W. Raets - Sept 8th, 2013<br/>
' - Last updated: March 4th, 2016 by W. Raets (gbWilly)<br/>
