# Raspbian

@{index}

----

## [<font color="darkblue">Gambas 3 binaries</font>]

### [<font color="blue">For wheezy</font>]

----

#### [<font color="green">Gambas 3.1.1</font>]

----

Official repository for wheezy has Gambas 3.1.1 available.

All it takes is opening a terminal and enter these commands:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

[[ info
It seems that the Raspbian Gambas repository installs a broken Gambas 3.1.1.
]]

----

#### [<font color="green">Gambas 3.8.2</font>]

----

If you want to install Gambas 3.8.2, you need to add the repository of the DomotiGa project.<br/>
Before doing this best update and upgrade your system first.

    $ sudo apt-get update
    $ sudo apt-get upgrade

To add the DomotiGa project repository, open sources.list with nano editor.

    $ sudo nano -w /etc/apt/sources.list

Add these lines to sources.list :

    deb https://domotiga.nl/apt/raspbian wheezy main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

Next you need to get the key for the repository and add it to your system.

    $ wget -O - https://domotiga.nl/apt/public.gpg.key | sudo apt-key add -

Next step is to install https transports for apt

    $ sudo apt-get install -y apt-transport-https

Now update the sources and install Gambas 3:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

[[ warning
**IMPORTANT NOTE**

You might get some connection timeouts as either the server hosting the repository or the connection itself doesn't seem to be able to cope all the time.
If this happens try:

    $ sudo apt-get update --fix-missing
    $ sudo apt-get install gambas3 --fix-missing

You might need to be persistent and try it a few times if you still get connection timeouts.

]]

----

### [<font color="blue">For jessie</font>]

----

#### [<font color="green">Gambas 3.5.4</font>]

----

Official repository for jessie has Gambas 3.5.4 available.

All it takes is opening a terminal and enter these commands:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

----

#### [<font color="green">Gambas 3.8.2</font>]

----

If you want to install Gambas 3.8.2, you need to add the repository of the DomotiGa project.<br/>
Before doing this best update and upgrade your system first.

    $ sudo apt-get update
    $ sudo apt-get upgrade

To add the DomotiGa project repository, open sources.list with nano editor.

    $ sudo nano -w /etc/apt/sources.list

Add these lines to sources.list :

    deb https://domotiga.nl/apt/raspbian jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

Next you need to get the key for the repository and add it to your system.

    $ wget -O - https://domotiga.nl/apt/public.gpg.key | sudo apt-key add -

Next step is to install https transports for apt

    $ sudo apt-get install -y apt-transport-https

Now update the sources and install Gambas 3:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

[[ warning
**IMPORTANT NOTE**

You might get some connection timeouts as either the server hosting the repository or the connection itself doesn't seem to be able to cope all the time.
If this happens try:

    $ sudo apt-get update --fix-missing
    $ sudo apt-get install gambas3 --fix-missing

You might need to be persistent and try it a few times if you still get connection timeouts.

]]

----

### [<font color="blue">For sid</font>]

----

#### [<font color="green">Gambas 3.5.4</font>]

----

Official repository for sid has Gambas 3.5.4 available.

All it takes is opening a terminal and enter these commands:

    $ sudo apt-get update
    $ sudo apt-get install gambas3

After installation you will find Gambas 3 installed in menu \'Programming\'.

----

## [<font color="darkblue">Gambas3 compilation</font>]

----

[[ info
Installing binaries with a package management system is ALWAYS preferred over compilation and installation.
]]

----

### [<font color="blue">Compilation from sources (wheezy - stable)</font>]

----

#### [<font color="green">Gambas 3 (version <= 3.4.2)</font>]

----
[[ warning
**IMPORTANT NOTE**

Be aware that compiling Gambas from source on a Raspberry Pi takes a very long time.

]]


<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t19) and [Downloading Gambas from Subversion repository](#t20)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> When installing first update the sources:

    $ sudo apt-get update

<i>Step 4.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libfbclient2 libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libldap2-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev libbonobo2-dev libcos4-dev libomniorb4-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libpoppler-private-dev libasound2-dev libesd0-dev libdirectfb-dev libaa1-dev libxtst-dev libffi-dev kdelibs5-dev firebird-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgsl0-dev libncurses5-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libcairo2-dev libgmime-2.6-dev llvm-3.1-dev

<i>Step 5.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>


----

#### [<font color="green">Gambas 3 (version >= 3.5 and <= 3.6)</font>]

----

[[ warning
**IMPORTANT NOTE**

Be aware that compiling Gambas from source on a Raspberry Pi takes a very long time.

]]


<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t19) and [Downloading Gambas from Subversion repository](#t20)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> When installing first update the sources:

    $ sudo apt-get update

<i>Step 4.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-3.1-dev libalure-dev libgmp-dev libgtk-3-dev

[[ warning
**NOTE**

When running above line those packages missing in Raspbian wheezy will be mentioned. For the availability of these packages see [A note on package dependencies](#t21)<br/>
For example your missing packages are in the jessie repository. Open sources.list with nano editor.

    $ sudo nano -w /etc/apt/sources.list

Add these lines to sources.list :

    deb http://archive.raspbian.org/raspbian/ jessie main
    deb-src http://archive.raspbian.org/raspbian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

Next update the sources and install the missing packages ONLY (or better use apt preferences):

    $ sudo apt-get update
    $ sudo apt-get install <name-of-missing-package-01> <name-of-missing-package-02> ...

<font color="red">Doing sudo apt-get update and upgrade later on, will pull in a lot more and might mess up your system install.<br/>
So <b>directly after the installation of the missing packages it is strongly advised to remove the jessie entry from sources.list</b>.</font><br/>
For this do:

    $ sudo nano -w /etc/apt/sources.list

Add # to these lines in the sources.list to comment them out:

    #deb http://archive.raspbian.org/raspbian/ jessie main
    #deb-src http://archive.raspbian.org/raspbian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

<font color="green">If you do want to keep both wheezy and jessie in the sources.list and not mess up your system, the have a look at<br/>
<a href="https://wiki.debian.org/AptPreferences"target="_blank">Apt Preferences</a>, as it explains how to grab packages from a later release but leave the rest as-is.</font>

]]

<i>Step 5.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.7 and development version on /trunk)</font>]

----

[[ warning
**IMPORTANT NOTE**

Be aware that compiling Gambas from source on a Raspberry Pi takes a very long time.

]]


<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t19) and [Downloading Gambas from Subversion repository](#t20)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> When installing first update the sources:

    $ sudo apt-get update

<i>Step 4.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-3.1-dev libalure-dev libgmp-dev libgtk-3-dev libsdl2-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-image-dev sane-utils libdumb1-dev

For version on `/trunk` and 3.8 or higher add:

    $ sudo apt-get install libqt5opengl5-dev libqt5svg5-dev libqt5webkit5-dev libqt5x11extras5-dev qtbase5-dev

<i><b>Note:</b> For trunk version you might need to install more dependencies when new components get developed.<br/>
For availability of packages in your specific distribution version see [A note on package dependencies](#t21)</i>

[[ warning
**NOTE**

When running above line those packages missing in Raspbian wheezy will be mentioned. For the availability of these packages see [A note on package dependencies](#t21)<br/>
For example your missing packages are in the jessie repository. Open sources.list with nano editor.

    $ sudo nano -w /etc/apt/sources.list

Add these lines to sources.list :

    deb http://archive.raspbian.org/raspbian/ jessie main
    deb-src http://archive.raspbian.org/raspbian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

Next update the sources and install the missing packages ONLY (or better use apt preferences):

    $ sudo apt-get update
    $ sudo apt-get install <name-of-missing-package-01> <name-of-missing-package-02> ...

<font color="red">Doing sudo apt-get update and upgrade later on, will pull in a lot more and might mess up your system install.<br/>
So <b>directly after the installation of the missing packages it is strongly advised to remove the jessie entry from sources.list</b>.</font><br/>
For this do:

    $ sudo nano -w /etc/apt/sources.list

Add # to these lines in the sources.list to comment them out:

    #deb http://archive.raspbian.org/raspbian/ jessie main
    #deb-src http://archive.raspbian.org/raspbian/ jessie main

Save the result ('\<ctrl> + O <b>-></b> \<enter>') and close the sources.list ('\<ctrl> + X')

<font color="green">If you do want to keep both wheezy and jessie in the sources.list and not mess up your system, the have a look at<br/>
<a href="https://wiki.debian.org/AptPreferences"target="_blank">Apt Preferences</a>, as it explains how to grab packages from a later release but leave the rest as-is.</font>

]]

<i>Step 5.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

### [<font color="blue">Compilation from sources (jessie and sid)</font>]

----

#### [<font color="green">Gambas 3 (version <= 3.4.2)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t19) and [Downloading Gambas from Subversion repository](#t20)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libfbclient2 libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libldap2-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev libbonobo2-dev libcos4-dev libomniorb4-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libpoppler-private-dev libasound2-dev libesd0-dev libdirectfb-dev libaa1-dev libxtst-dev libffi-dev kdelibs5-dev firebird-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgsl0-dev libncurses5-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgmime-2.6-dev llvm-3.4-dev

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.5 and <= 3.6)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t19) and [Downloading Gambas from Subversion repository](#t20)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-3.4-dev libalure-dev libgmp-dev libgtk-3-dev

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

#### [<font color="green">Gambas 3 (version >= 3.7 and development version on /trunk)</font>]

----

<i>Step 1.</i> Get the source code (either download and extract the package from main Gambas website or use svn checkout)

<i><b>Note:</b> For using svn checkout see [A note on installing from svn](#t19) and [Downloading Gambas from Subversion repository](#t20)</i>

<i>Step 2.</i> Open a terminal (make sure your user account is part of sudo group)

<i>Step 3.</i> Install these packages :

    $ sudo apt-get install build-essential g++ automake autoconf libbz2-dev libmysqlclient-dev unixodbc-dev libpq-dev libsqlite0-dev libsqlite3-dev libglib2.0-dev libgtk2.0-dev libcurl4-gnutls-dev libgtkglext1-dev libpcre3-dev libsdl-sound1.2-dev libsdl-mixer1.2-dev libsdl-image1.2-dev libsage-dev libxml2-dev libxslt1-dev librsvg2-dev libpoppler-dev libpoppler-glib-dev libasound2-dev libesd0-dev libdirectfb-dev libxtst-dev libffi-dev libqt4-dev libglew-dev libimlib2-dev libv4l-dev libsdl-ttf2.0-dev libgnome-keyring-dev libgdk-pixbuf2.0-dev linux-libc-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libcairo2-dev libgsl0-dev libncurses5-dev libgmime-2.6-dev llvm-3.4-dev libalure-dev libgmp-dev libgtk-3-dev libsdl2-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-image-dev sane-utils libdumb1-dev

For version on `/trunk` and 3.8 or higher add:

    $ sudo apt-get install libqt5opengl5-dev libqt5svg5-dev libqt5webkit5-dev libqt5x11extras5-dev qtbase5-dev

<i><b>Note:</b> For trunk version you might need to install more dependencies as new components get developed.<br/>
For availability of packages in your specific distribution version see [A note on package dependencies](#t21)</i>

<i>Step 4.</i> Go into the directory where the Gambas source file are located and run the script :

    $ ./reconf-all

<i>Step 6.</i> Once this script is finished, you can run the common commands to compile and install a program under GNU/Linux :

    $ ./configure -C
    $ make
    $ sudo make install

<i>Step 7.</i> Type gambas3

Gambas should start and run.

<i><b>Note:</b> You can make a symlink to start gambas3</i>

----

## [<font color="darkblue">Important notes</font>]

### [<font color="blue">A note on installing from svn</font>]

----

If you want to compile the latest '/trunk' development version or a stable version from svn, you need to install subversion first.

To do this open a terminal and do:

    $ sudo apt-get install subversion

You will now be able to do a svn checkout.

----

### [<font color="blue">Downloading Gambas from Subversion repository</font>]

----

Everybody can make a copy of the repository on his hard disk by using the following command:

<b>For trunk version</b>

    $ svn checkout svn://svn.code.sf.net/p/gambas/code/gambas/trunk

<b>For current stable version (3.8)</b>

    $ svn checkout svn://svn.code.sf.net/p/gambas/code/gambas/branches/3.8

<b>For an old stable version (e.g. 3.6)</b>

    $ svn checkout svn://svn.code.sf.net/p/gambas/code/gambas/branches/3.6

----

### [<font color="blue">A note on package dependencies</font>]

----

As dependencies may change over time it is always a good thing to know what is available on Raspbian and in what repository.<br/>
In <a href="http://archive.raspbian.org/raspbian/pool/"target="_blank">Raspbian repository</a> you can browse for available packages. Only problem is that you do not know if they are stable (wheezy), testing (jessie) or unstable (sid).

To figure that out you need to check <a href="http://www.debian.org/distrib/packages"target="_blank">Debian packages overview</a> for the availability of needed dependency packages on Debian <b>(yes, Debian)</b>.<br/>
If you scroll all the way down on the page you can search for a package and find out what repositories hold them.

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/DebianPack.png"><br/>
<i>Search for package llvm-3.2-dev shows us it is only available for jessie and sid</i>

Now, if a package on Debian (lets say llvm-3.2-dev) is available for jessie <font color="red"><b>and</b></font> you also found llvm-3.2-dev browsing the Raspbian repository<br/>
then the package can be installed from the Raspbian jessie repository.


----

## [<font color="darkblue">Screenshots</font>]

### [<font color="blue">Raspbian wheezy</font>]

----

#### [<font color="green">Raspbian wheezy running Gambas 3.5.2, using jessie repository</font>]

----

<img src="http://develop.earthshipeurope.org/Gambas3/AppImage/Gambas-Raspbian-wheezy-using-jessie.png">
<br/><br/>
'Raspbian Gambas 3 instructons by: W. Raets - April 9th, 2014<br/>
' - Last updated: November 11th, 2015 by W. Raets (gbWilly)<br/>
